
@model ComplexModel.Models.ViewModels.CustomerOrderVM

@{
    ViewData["Title"] = "placeOrder";
}

<h1>Place Order</h1>

<h4>Item</h4>
<hr />
<div class="row">


   @* asp-action="placeOrder"*@
        <div class="col-md-4">
           <form method="post" >

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div>@Model.TotalPrice.ToString()</div>
                @*  <div class="form-group">
                <label asp-for="@Model.ItemName" class="control-label"></label>
                <input asp-for="@Model.ItemName" class="form-control" />
                <span asp-validation-for="@Model.ItemName" class="text-danger"></span>
                </div>*@
            <div class="form-group"><h2><label class="control-label"></label>Customer Name: @Model.CustomerName</h2></div>
                <div class="form-group">
                    @*<label asp-for="@Model.ItemNa" class="control-label"></label>*@
                    Item Name:
                <select asp-for="@Model.ItemId" asp-items="@Model.CSelectListItem(@Model.Items)" onchange="getUnits(event)" class="form-control"></select>
   @*                 <select asp-for="@Model.ItemId" asp-items="@Model.CSelectListItem(@Model.Items)" onchange="getUnits(this, @Model.CustomerName.ToString(), @Model.CustomerGuidKey.ToString())" class="form-control"></select>*@
               @* <select asp-for="@Model.ItemId" asp-items="@Model.CSelectListItem(@Model.Items)" onchange={(e) => this.getUnits(this, @Model.CustomerName.ToString(), @Model.CustomerGuidKey.ToString())} class="form-control"></select>*@
                    <span asp-validation-for="@Model.ItemId" class="text-danger"></span>
    @*            @{

                    var units = @Model.SetUnits(Model.ItemId);
                }*@
                </div>

                <div id="PV"></div>
               @*<div class="form-group">
                    Unit Type:
                @if (Model.ItemId != null)
                {
        
                    <label>Unit Type:</label>
                    <select asp-for="@Model.UnitId" asp-items="@Model.CSelectListUnit(@Model.Units.ToList())" class="form-control"></select>
                    <span asp-validation-for="@Model.UnitId" class="text-danger"></span>
                }
                
                </div>*@
                @*<div class="form-group">
                    <label asp-for="@Model.PricePerUnit" class="control-label"></label>
                    <input asp-for="@Model.PricePerUnit" class="form-control" />
                    <span asp-validation-for="@Model.PricePerUnit" class="text-danger"></span>
                </div>*@
               @* <div class="form-group">
                    <label asp-for="@Model.Quantity" class="control-label"></label>
                    <input asp-for="@Model.Quantity" class="form-control" />
                    <span asp-validation-for="@Model.Quantity" class="text-danger"></span>
                </div>*@
                @* <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
                </div>*@
            <input hidden asp-for="@Model.CustomerName" class="form-control" />
            <input hidden asp-for="@Model.TotalPrice" class="form-control" />
            <input hidden asp-for="@Model.OrderId" class="form-control" />
            <input hidden asp-for="@Model.CustomerGuidKey" class="form-control" />
                <div class="form-group">
                <input type="submit" value="Submit" asp-action="placeOrder" class="btn btn-primary" />
                </div>
            <div class="form-group">
                <input type="submit"  value="Add New Item" asp-area="Customer" asp-controller="CustomerOrder" asp-action="AddItem" class="btn btn-primary" />
            </div>
            </form>
        </div>

        @*onseeking="getUnits(@Model.ItemId.ToString())"*@

  @*  <script>
        function getUnits(id) {
            $.ajax({

                url: '/Customer/CustomerOrder/' + id,
                type: 'GET',
                contentType: 'json',
                success: function (result) {
                    console.log('Data received: ');
                    //console.log(result);

                    let content = document.getElementById('d');
                    content.innerHTML = `${result}`;
                }
            })

        }
    </script>*@




    @*<div class="col-md-4">
        <form asp-action="placeOrder">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>*@
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    function getUnits(e) {
        console.log("val",e.target.value)
        const val = e.target.value
        var obj={
            id:e.target.value,
            cName: '@(@Model.CustomerName)',
            cGuid: "@(Model.CustomerGuidKey)",
            oid: "@(Model.OrderId)"
        }
        $.ajax({

            url: '/customer/CustomerOrder/getUnits/',
            //url: '/customer/CustomerOrder/getUnits/' + e.value,
            type: 'GET',
            contentType: 'json',
            success: function (result) {
            console.log('Data received: ');
            console.log(result);

                let content = document.getElementById('PV');
                    content.innerHTML = `${result}`;
                    //@Model.Units =result;
                    //@Model = result

                }
               ,
                error:function(err){
                    console.log("arr",err)
                } ,
                data:obj
        })

    }

    function jsonToQueryString(json) {
        return '?' +
            Object.keys(json).map(function (key) {
                return encodeURIComponent(key) + '=' +
                    encodeURIComponent(json[key]);
            }).join('&');
    }
</script>



@*<select asp-for="@Model.ItemId" asp-items="@Model.CSelectListItem(@Model.Items)" onchange="getUnits(this)" class="form-control"></select>*@
